import Head from "next/head";
import { useState } from "react";
import { CreateCompletionResponseChoicesInner } from "openai";
import Header from "@/components/Header";
import Footer from "@/components/Footer";
import ResizableTextArea from "@/components/ResizableTextArea";
import Spinner from "@/components/Spinner";
import Choice from "@/components/Choice";

const defaultPrompt = (promptDescription: string) =>
  `Suggest two captions for a picture ${promptDescription}. Make sure it's below 20 characters. Make sure is funny and casual.`;

export default function Home() {
  const [prompt, setPrompt] = useState<string>("");
  const [completions, setCompletions] = useState<string[]>([]);
  const [generating, setGenerating] = useState<boolean>(false);

  const onSubmit = async () => {
    setGenerating(true);
    const response = await fetch("/api/generate", {
      method: "POST",
      body: JSON.stringify({ prompt: defaultPrompt(prompt) }),
    });

    const jsonRes = await response.json();
    const choices: CreateCompletionResponseChoicesInner[] = jsonRes.choices;

    if (choices[0]?.text) {
      let parsedChoices = choices[0].text.trim().split("\n");
      parsedChoices = parsedChoices.map((choice, index) => {
        const [, text] = choice.split(`${index + 1}. `);

        return text.replace(/\"/g, "");
      });
      setCompletions(parsedChoices);
      setGenerating(false);
    }
  };

  const onClear = () => {
    setPrompt("");
    setCompletions([]);
  };

  return (
    <div className="flex flex-col min-h-screen px-4">
      <Head>
        <title>Generate Captions for Pictures</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Header />
      <main className="flex-grow w-full mx-auto max-w-3xl">
        <div className="flex flex-col w-full">
          <p className="flex flex-row mt-4 font-semibold">
            Describe your pic (with the greatest detail)
          </p>
          <ResizableTextArea
            value={prompt}
            setValue={setPrompt}
            className="resize-none my-4 border rounded p-4"
            placeholder="e.g. at the beach with my family and friends."
          />
          {completions.length > 0 && (
            <div className="my-4">
              <div className="flex flex-row justify-between">
                <p className="flex flex-row font-semibold">
                  Generated captions
                </p>

                <button onClick={onClear}>Clear</button>
              </div>
              {completions.map((completion) => (
                <Choice key={completion} text={completion} />
              ))}
            </div>
          )}
          <button
            className="flex flex-row items-center justify-center bg-black p-2 rounded text-white disabled:opacity-25 enabled:hover:bg-gray-700"
            onClick={onSubmit}
            disabled={generating || !prompt}
          >
            {generating ? <Spinner /> : <>Generate caption</>}
          </button>
        </div>
      </main>
      <Footer />
    </div>
  );
}
